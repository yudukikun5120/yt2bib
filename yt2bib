#!/usr/bin/env ruby
# frozen_string_literal: true

require 'thor'
require_relative 'solutions/core'
require_relative 'solutions/soundcloud_solution'

class CLI < Thor
  package_name 'yt2bib'

  def self.exit_on_failure?
    true
  end

  desc 'yt <video URL>', 'Convert a YouTube video to a BibTeX entry'
  long_desc <<-LONGDESC
    Convert a YouTube video to a BibTeX entry.

    Example:

    $ yt2bib yt https://www.youtube.com/watch?v=9bZkp7q19f0

    @video{Psy:Gangnam Style,
      author = {Psy},
      title = {Gangnam Style},
      url = {https://www.youtube.com/watch?v=9bZkp7q19f0},
      date = {2012-07-15}
    }
  LONGDESC

  default_command :yt2bib

  map 'yt' => :youtube
  map 'sc' => :soundcloud

  def youtube(argv_identifier)
    identifier = normalize_identifier(argv_identifier)
    solutions = get_solutions(identifier)
    puts covert_yt_to_bib(solutions)
  end

  desc 'sc <soundcloud URL>', 'Convert a SoundCloud track to a BibTeX entry'
  def soundcloud(argv_identifier)
    solution = SoundcloudSolution.new(argv_identifier)
    puts solution.to_bib
  end
end

CLI.start(ARGV)
